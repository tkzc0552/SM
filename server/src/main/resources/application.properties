###app
app.name=systemmodel
app.description=${app.name} is a Spring Boot application

#logger
###logging.config=classpath:env/${spring.profiles.active}/log4j2.xml

logging.path=.
logging.config=classpath:env/${spring.profiles.active}/log4j2.xml

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.druid.initialSize=3
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=10
spring.datasource.druid.max-wait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.defaultAutoCommit=false
#java.sql.Connection.TRANSACTION_READ_COMMITTED
spring.datasource.druid.defaultTransactionIsolation=2
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,slf4j


spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.merge-sql=true

spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.connectionCommitAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.connectionConnectBeforeLogEnabled=false
spring.datasource.druid.filter.slf4j.connectionCloseAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.connectionConnectAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.connectionLogEnabled=false
spring.datasource.druid.filter.slf4j.connectionLogErrorEnabled=false
spring.datasource.druid.filter.slf4j.connectionRollbackAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.dataSourceLogEnabled=false
spring.datasource.druid.filter.slf4j.statementCloseAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementCreateAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementExecuteAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementExecuteBatchAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementExecuteQueryAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementExecuteUpdateAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementExecutableSqlLogEnable=true
spring.datasource.druid.filter.slf4j.statementLogEnabled=true
spring.datasource.druid.filter.slf4j.statementLogErrorEnabled=true
spring.datasource.druid.filter.slf4j.statementLogSqlPrettyFormat=true
spring.datasource.druid.filter.slf4j.statementParameterClearLogEnable=false
spring.datasource.druid.filter.slf4j.statementParameterSetLogEnabled=true
spring.datasource.druid.filter.slf4j.statementPrepareAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.statementPrepareCallAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.resultSetCloseAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.resultSetLogEnabled=false
spring.datasource.druid.filter.slf4j.resultSetLogErrorEnabled=false
spring.datasource.druid.filter.slf4j.resultSetNextAfterLogEnabled=false
spring.datasource.druid.filter.slf4j.resultSetOpenAfterLogEnabled=false

spring.datasource.druid.slf4j.slowSqlMillis=30000
spring.datasource.druid.slf4j.logSlowSql=true
spring.datasource.druid.slf4j.mergeSql=true


spring.jpa.database=MYSQL
spring.jpa.properties.hibernate.default_entity_mode=pojo
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.query.conventional_java_constants=true
spring.jpa.properties.javax.persistence.validation.mode=none
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.discriminator.ignore_explicit_for_joined=false
spring.jpa.properties.hibernate.max_fetch_depth=3


spring.jpa.properties.org.hibernate.envers.audit_table_prefix=
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_audit
spring.jpa.properties.org.hibernate.envers.revision_field_name=revision
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=revision_type
spring.jpa.properties.org.hibernate.envers.revision_on_collection_change=true
spring.jpa.properties.org.hibernate.envers.do_not_audit_optimistic_locking_field=true
spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
spring.jpa.properties.org.hibernate.envers.default_schema=
spring.jpa.properties.org.hibernate.envers.default_catalog=

spring.jackson.mapper.DEFAULT_VIEW_INCLUSION = false
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS = false
spring.jackson.serialization-inclusion = non_null
#spring.jackson.deserialization.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT = true
spring.jackson.deserialization.ACCEPT_SINGLE_VALUE_AS_ARRAY = true
spring.jackson.deserialization.ACCEPT_FLOAT_AS_INT = true
spring.jackson.deserialization.FAIL_ON_MISSING_CREATOR_PROPERTIES = false
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES = false
spring.jackson.deserialization.USE_BIG_DECIMAL_FOR_FLOATS = true

mymodel.authority.default.excluded_patterns = /**/favicon.ico,/webjars/**,/static/js/**,/static/css/**,/static/font/**


spring.http.multipart.maxFileSize=10Mb
spring.http.multipart.maxRequestSize=100Mb